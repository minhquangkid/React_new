{"version":3,"sources":["body/movieList.module.css","pages/browse/browse.module.css","body/movieDetail.module.css","navbar/navbar.js","data/data.js","banner/banner.js","body/movieList.js","data/trailer.js","body/movieDetail.js","pages/browse/Browse.jsx","pages/search/SearchForm.js","pages/search/resultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js","pages/search/Search.module.css","banner/banner.module.css","navbar/navbar.module.css"],"names":["module","exports","Navbar","useState","scrolled","setScrolled","useEffect","console","log","handleScroll","window","scrollY","addEventListener","removeEventListener","Fragment","className","classes","navbarFrame","transfer","to","chu","searchIcon","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","width","height","d","useData","url","handle","depence","fetch","response","ok","Error","json","data","getData","catch","error","message","Banner","link","setLink","e","random","Math","floor","results","length","pic","backdrop_path","title","name","overview","back","src","alt","image","content","button","onClick","custom_Text","text","MovieList","props","arr","setArr","isOriginal","type","clickHandle","filter","item","id","target","tam","click","getLink","list","map","key","poster_path","loai","parentElement","clickParent","tieude","cover","Trailer","status","setStatus","inf","getVideo","setGetVideo","arrayFilter","site","getTrailer","videoId","opts","playerVars","autoplay","onReady","event","pauseVideo","MovieDetail","detail","getInf","frame","release_date","vote_average","api","typeFilm","Browse","parentID","setParentID","show","showData","setShowData","getDetail","getParent","umbrella","SearchForm","inputValue","useRef","inside","Icon","placeholder","inputText","ref","line","btnSearch","current","value","getValue","btnReset","ResultList","movie","setMovie","passValue","poster","Search","request","setRequest","setResponse","App","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":";oGACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,IAAM,uBAAuB,OAAS,4B,mBCAzFD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,SAAW,2B,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,6B,kLCmEXC,EA/DA,WACb,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KA+BA,OA5BAC,qBAAU,WACRC,QAAQC,IAAI,uBAEZ,IAAMC,EAAe,WAKfC,OAAOC,QAAU,IACnBN,GAAY,GAEZA,GAAY,IAMhB,OAFAK,OAAOE,iBAAiB,SAAUH,GAE3B,WACLF,QAAQC,IAAI,qBACZE,OAAOG,oBAAoB,SAAUJ,MAEtC,IAQD,kBAAC,IAAMK,SAAP,KACE,yBACEC,UAAS,WAAMC,IAAQC,YAAd,YAA6Bb,GAAYY,IAAQE,WAE1D,kBAAC,IAAD,CAAMC,GAAI,KACR,wBAAIJ,UAAWC,IAAQI,KAAvB,cAEF,kBAAC,IAAD,CAAMD,GAAI,WACR,0BAAMJ,UAAWC,IAAQK,YACvB,yBACEN,UAAU,oCACVO,KAAK,OACLC,cAAY,OACZC,cAAY,MACZC,YAAU,SACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRC,MAAM,OACNC,OAAO,QAEP,0BAAMC,EAAE,oW,i1MCxDtB,IA+CeC,EA/CC,SAACC,EAAKC,EAAQC,GAG5B7B,qBAAU,YACK,uCAAG,sGAOS8B,MACrBH,GARY,WAORI,EAPQ,QAkBAC,GAlBA,sBAmBN,IAAIC,MAAM,yBAnBJ,uBAuBKF,EAASG,OAvBd,OAuBRC,EAvBQ,OAwBdlC,QAAQC,IAAIiC,GAIZP,EAAOO,GA5BO,4CAAH,qDA+BbC,GAAUC,OAAM,SAACC,GACfrC,QAAQC,IAAIoC,EAAMC,cAEnB,CAACV,KCoBSW,EAzDA,WACb,MAAwB3C,mBAAS,IAAjC,mBAAO4C,EAAP,KAAaC,EAAb,KA4BA,OA3BAhB,EACE,sGAMF,SAAsBiB,GACpB,IAAIC,EAASC,KAAKC,MAAMD,KAAKD,SAAWD,EAAEI,QAAQC,OAAS,GACvDC,EAAMN,EAAEI,QAAQH,GAAQM,cACxBC,EAAQR,EAAEI,QAAQH,GAAQQ,KAC1BC,EAAWV,EAAEI,QAAQH,GAAQS,SACjCpD,QAAQC,IAAI+C,GACZP,EAAQ,CACNO,IAAI,uCAAD,OAAyCA,GAC5CE,QACAE,gBAYF,yBAAK5C,UAAWC,IAAQ4C,MACtB,yBACEC,IAAKd,EAAKQ,IACVO,IAAI,aACJjC,MAAM,OACNC,OAAO,QACPf,UAAWC,IAAQ+C,QAErB,wBAAIhD,UAAWC,IAAQyC,OAAQV,EAAKU,OACpC,yBAAK1C,UAAWC,IAAQgD,SACtB,4BACEjD,UAAWC,IAAQiD,OACnBC,QAAS,WACP3D,QAAQC,IAAI,YAHhB,QAQA,4BAAQO,UAAWC,IAAQiD,QAA3B,WACA,yBAAKlD,UAAWC,IAAQmD,aACtB,uBAAGpD,UAAWC,IAAQoD,MAAOrB,EAAKY,c,iBCQ7BU,EA1DG,SAACC,GACjB,MAAsBnE,mBAAS,IAA/B,mBAAOoE,EAAP,KAAYC,EAAZ,KAGIC,EAA4B,aAAfH,EAAMI,KASvB,SAASC,EAAY1B,GAQnB,MAAcsB,EAAIK,QAAO,SAACC,GAAD,OAAWA,EAAKC,MAAQ7B,EAAE8B,OAAOD,MAAnDE,EAAP,oBACAV,EAAMW,MAAMD,GAhBdhD,EAAQsC,EAAMY,SAEd,SAAqBjC,GACnBuB,EAAOvB,EAAEI,YAwBX,IAAM8B,EAAOZ,EAAIa,KAAI,SAACP,GAEpB,OACE,yBACEQ,IAAKR,EAAKC,GACVA,GAAID,EAAKC,GACTjB,IAAG,8CACDY,EAAaI,EAAKS,YAAcT,EAAKrB,eAEvCM,IAAI,OACJjC,MAAM,QACNC,OAAO,OACPf,UAAWC,IAAQuC,IACnBW,QAASS,OAKf,OACE,yBAAKG,GAAIR,EAAMI,KAAMR,QA3BvB,SAAejB,GAGb,IAAMsC,EAAOtC,EAAE8B,OAAOS,cAAcA,cAAcV,GAClDR,EAAMmB,YAAYF,KAwBhB,wBAAIxE,UAAWC,IAAQ0E,QAASpB,EAAMI,MACtC,yBAAK3D,UAAWC,IAAQ2E,OAAQR,K,k0MCvDtC,IAoFeS,EApFC,SAACtB,GAEf,MAA4BnE,oBAAS,GAArC,mBAAO0F,EAAP,KAAeC,EAAf,KACA,EAAgC3F,mBAASmE,EAAMyB,IAAIvC,eAAnD,mBAAOwC,EAAP,KAAiBC,EAAjB,KAKA3F,qBAAU,YAEQ,uCAAG,wGACM8B,MAAM,sCAAD,OACYkC,EAAMyB,IAAIjB,GADtB,qDADX,WACXzC,EADW,QAKHC,GALG,sBAMT,IAAIC,MAAM,0BAND,uBAQKF,EAASG,OARd,OAQXE,EARW,OAiBU,KALvBwD,EAAcxD,EAAQW,QAAQuB,QAAO,SAAC3B,GACxC,MAAkB,YAAXA,EAAEkD,MAAiC,YAAXlD,EAAEyB,SAInBpB,SACd4C,EAAcxD,EAAQW,QAAQuB,QAAO,SAAC3B,GACpC,MAAkB,YAAXA,EAAEkD,MAAiC,WAAXlD,EAAEyB,SAMV,IAAvBwB,EAAY5C,QACd2C,EAAY3B,EAAMyB,IAAIvC,eACtBsC,GAAU,KAGVG,EAAYC,EAAY,IACxBJ,GAAU,IA/BK,4CAAH,qDAuChBM,GAAazD,OAAM,SAACC,GAClBrC,QAAQC,IAAIoC,QAEb,CAAC0B,IAeJ,OACE,6BACGuB,GACC,kBAAC,IAAD,CAASQ,QAASL,EAASX,IAAKiB,KAhBzB,CACXxE,OAAQ,MACRD,MAAO,OACP0E,WAAY,CACVC,SAAU,IAYoCC,QARlD,SAAiBC,GAEfA,EAAM3B,OAAO4B,iBAQTd,GACA,yBACEhC,IAAG,8CAAyCmC,GAC5ClC,IAAI,OACJjC,MAAM,OACNC,OAAO,YCzDF8E,EAnBK,SAACtC,GACnB,IAAMuC,EAASvC,EAAMwC,OAErB,OADAvG,QAAQC,IAAIqG,GAEV,yBAAK9F,UAAWC,IAAQ+F,OACtB,6BACE,4BAAKF,EAAOpD,OACZ,6BACA,8CAAoBoD,EAAOG,cAC3B,sCAAYH,EAAOI,aAAnB,OACA,2BAAIJ,EAAOlD,WAEb,6BACE,kBAAC,EAAD,CAASoC,IAAKc,OCVhBK,EAAM,CACV,CACEnE,KAAM,qGACNoE,SAAU,YAEZ,CACEpE,KAAM,yGACNoE,SAAU,sBAEZ,CACEpE,KAAM,uGACNoE,SAAU,0BAEZ,CACEpE,KAAM,sGACNoE,SAAU,0BAEZ,CACEpE,KAAM,sGACNoE,SAAU,UAEZ,CACEpE,KAAM,sGACNoE,SAAU,gBAEZ,CACEpE,KAAM,yGACNoE,SAAU,oBAEZ,CACEpE,KAAM,sGACNoE,SAAU,qBA0DCC,EAtDA,WACb,MAAgCjH,mBAAS,IAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAEA,EAAgCnH,mBAAS,CAAE2E,GAAI,EAAGd,QAAS,GAAIuD,MAAM,IAArE,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,SAACzE,GACjB1C,QAAQC,IAAI,SAAUyC,GACtB1C,QAAQC,KAAKgH,EAAS1C,IACtBvE,QAAQC,KAAKyC,EAAE6B,KACV0C,EAAS1C,MAAQ7B,EAAE6B,GACtB2C,EAAY,CACV3C,GAAI7B,EAAE6B,GACNd,QAASf,EACTsE,MAAM,IAGRE,EAAY,CAAE3C,GAAI,EAAGd,QAAS,GAAIuD,MAAM,KAMtCI,EAAY,SAAC1E,GACjBqE,EAAYrE,IAIRkC,EAAO+B,EAAI9B,KAAI,SAACP,GACpB,OACE,kBAAC,IAAM/D,SAAP,KACE,kBAAC,EAAD,CACEoE,QAASL,EAAK9B,KACd2B,KAAMG,EAAKsC,SACXlC,MAAOyC,EACPjC,YAAakC,IAEdN,IAAaxC,EAAKsC,UAAYK,EAASD,MACtC,kBAAC,EAAD,CAAaT,OAAQU,EAASxD,cAMtC,OACE,kBAAC,IAAMlD,SAAP,KACE,yBAAKC,UAAWC,IAAQ4G,UACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCzC,K,gBCtCM0C,EAjDI,SAACvD,GAClB,IAAMwD,EAAaC,mBAWnB,OACE,yBAAKhH,UAAWC,IAAQ2E,OACtB,yBAAK5E,UAAWC,IAAQgH,QACtB,0BAAMjH,UAAWC,IAAQiH,MACvB,yBACElH,UAAU,oCACVO,KAAK,OACLC,cAAY,OACZC,cAAY,MACZC,YAAU,SACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRC,MAAM,OACNC,OAAO,QAEP,0BAAMC,EAAE,gWAGZ,2BACE2C,KAAK,OACLwD,YAAY,gBACZnH,UAAWC,IAAQmH,UACnBC,IAAKN,IAEP,wBAAI/G,UAAWC,IAAQqH,OACvB,4BAAQtH,UAAWC,IAAQsH,UAAWpE,QAnCpB,WACtB3D,QAAQC,IAAIsH,EAAWS,QAAQC,OAC/BlE,EAAMmE,SAASX,EAAWS,QAAQC,SAiC9B,UAGA,4BAAQzH,UAAWC,IAAQ0H,SAAUxE,QAjCpB,WACrB4D,EAAWS,QAAQC,MAAQ,KAgCvB,YCSOG,EAjDI,SAACrE,GAClB,MAA0BnE,mBAAS,IAAnC,mBAAOyI,EAAP,KAAcC,EAAd,KAeA,SAASlE,EAAY1B,GAGnB,IAAM+B,EAAM4D,EAAMhE,QAAO,SAACC,GAGxB,OAAOA,EAAKC,MAAQ7B,EAAE8B,OAAOD,MAK/BR,EAAMoD,UAAU1C,EAAI,IAvBtBhD,EAAQ,2GAAD,OACsGsC,EAAMwE,UAD5G,yBAOP,SAAsB7F,GACpB4F,EAAS5F,EAAEI,WALXiB,EAAMwE,WAuBR,IAAM3D,EAAOyD,EAAMxD,KAAI,SAACP,GAEtB,OACE,yBACEQ,IAAKR,EAAKC,GACVA,GAAID,EAAKC,GACTjB,IAAG,8CAAyCgB,EAAKS,aACjDxB,IAAI,OACJjC,MAAM,QACNC,OAAO,OACPf,UAAWC,IAAQ+H,OACnB7E,QAASS,OAKf,OAAO,yBAAK5D,UAAWC,IAAQ+F,OAAQ5B,ICH1B6D,EAxCA,WAGb,MAA8B7I,mBAAS,IAAvC,mBAAO8I,EAAP,KAAgBC,EAAhB,KACA,EAAgC/I,mBAAS,CAAE2E,GAAI,EAAGd,QAAS,GAAIuD,MAAM,IAArE,mBAAOlF,EAAP,KAAiB8G,EAAjB,KAsBA,OACE,kBAAC,IAAMrI,SAAP,KACE,yBAAKC,UAAWC,IAAQ4G,UACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYa,SAxBA,SAACxF,GAEjBiG,EAAWjG,MAuBP,wBAAIlC,UAAWC,IAAQyC,OAAvB,iBACCpB,EAASkF,MAAQ,kBAAC,EAAD,CAAaT,OAAQzE,EAAS2B,UAChD,kBAAC,EAAD,CAAY8E,UAAWG,EAASvB,UAtBf,SAACzE,GACtB1C,QAAQC,IAAIyC,GAGRA,EAAE6B,KAAOzC,EAASyC,GACpBqE,EAAY,CACVrE,GAAI7B,EAAE6B,GACNd,QAASf,EACTsE,MAAM,IAGR4B,EAAY,CAAErE,GAAI,EAAGd,QAAS,GAAIuD,MAAM,UCP/B6B,MAXf,WACC,OACC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACD,kBAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,kBAAC,EAAD,QACzB,kBAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,kBAAC,EAAD,WCJ5BC,EAAcC,QACU,cAA7B9I,OAAO+I,SAASC,UAEc,UAA7BhJ,OAAO+I,SAASC,UAEhBhJ,OAAO+I,SAASC,SAASC,MACxB,2DAsCH,SAASC,EAAgBC,EAAOC,GAC/BC,UAAUC,cACRC,SAASJ,GACTK,MAAK,SAACC,GACNA,EAAaC,cAAgB,WAC5B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACD,cAA3BF,EAAiBG,QAChBT,UAAUC,cAAcS,YAI3BlK,QAAQC,IACP,iHAKGsJ,GAAUA,EAAOY,UACpBZ,EAAOY,SAASP,KAMjB5J,QAAQC,IAAI,sCAGRsJ,GAAUA,EAAOa,WACpBb,EAAOa,UAAUR,WAOtBxH,OAAM,SAACC,GACPrC,QAAQqC,MAAM,4CAA6CA,MC1F9DgI,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDYlB,SAAkBlB,GACxB,GAA6C,kBAAmBC,UAAW,CAG1E,GADkB,IAAIkB,IAAIC,GAAwBxK,OAAO+I,SAAS0B,MACpDC,SAAW1K,OAAO+I,SAAS2B,OAIxC,OAGD1K,OAAOE,iBAAiB,QAAQ,WAC/B,IAAMiJ,EAAK,UAAMqB,GAAN,sBAEP3B,IAgEP,SAAiCM,EAAOC,GAEvC1H,MAAMyH,EAAO,CACZwB,QAAS,CAAE,iBAAkB,YAE5BnB,MAAK,SAAC7H,GAEN,IAAMiJ,EAAcjJ,EAASgJ,QAAQE,IAAI,gBAEpB,MAApBlJ,EAASwD,QACO,MAAfyF,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAACC,GACnCA,EAAauB,aAAaxB,MAAK,WAC9BxJ,OAAO+I,SAASkC,eAKlB/B,EAAgBC,EAAOC,MAGxBnH,OAAM,WACNpC,QAAQC,IACP,oEAvFAoL,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,MAAK,WAClC3J,QAAQC,IACP,iHAMFoJ,EAAgBC,EAAOC,OClC3BE,I,kBCfAhK,EAAOC,QAAU,CAAC,SAAW,yBAAyB,MAAQ,sBAAsB,OAAS,uBAAuB,KAAO,qBAAqB,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,0BAA0B,SAAW,yBAAyB,MAAQ,sBAAsB,MAAQ,sBAAsB,OAAS,yB,kBCAjWD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,MAAQ,sBAAsB,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,YAAc,8B,kBCAtND,EAAOC,QAAU,CAAC,YAAc,4BAA4B,SAAW,yBAAyB,IAAM,oBAAoB,WAAa,8B","file":"static/js/main.997f3d4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"movieList_cover__FN5cd\",\"pic\":\"movieList_pic__1G83e\",\"tieude\":\"movieList_tieude__hlIF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nut\":\"browse_nut__29CkI\",\"umbrella\":\"browse_umbrella__22gjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"movieDetail_frame__3O4Rm\"};","import { Link } from \"react-router-dom\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport classes from \"./navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  // const [test, setTest] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"đã tạo\");\r\n    // console.log(test);\r\n    const handleScroll = () => {\r\n      // console.log(\"window.scrollY\", window.scrollY);\r\n      // setTest(window.scrollY);\r\n      // console.log(test);\r\n      // console.log(\"run\");\r\n      if (window.scrollY > 100) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      console.log(\"đã xóa\");\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  /* - dùng useEffect để tạo addEventListener duy nhất 1 lần cho window, và useEffect sẽ ko bao giờ chạy lại nữa. Ở đây ta đã tạo addEventListener nên chương trình sẽ chờ khi sự kiện scroll xảy ra và chỉ chạy mỗi hàm handleScroll (do addEventListener gọi) chứ ko chạy lại toàn bộ useEffect\r\n - Dùng return để xóa EventListener chỉ khi component Navbar này bị xóa khỏi DOM (mà trong bài này thì ko cần xóa nên nó vô dụng) chứ ko chạy khi hàm handleScroll được gọi. Công dụng xóa là để tránh tràn bộ nhớ\r\n\r\n*/\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={` ${classes.navbarFrame} ${scrolled && classes.transfer}`}\r\n      >\r\n        <Link to={\"/\"}>\r\n          <h1 className={classes.chu}>Movie App</h1>\r\n        </Link>\r\n        <Link to={\"/search\"}>\r\n          <span className={classes.searchIcon}>\r\n            <svg\r\n              className=\"svg-inline--fa fa-search fa-w-16 \"\r\n              fill=\"#ccc\"\r\n              aria-hidden=\"true\"\r\n              data-prefix=\"fas\"\r\n              data-icon=\"search\"\r\n              role=\"img\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n            >\r\n              <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n            </svg>\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\n// tạo 2 tham số truyền vào cho custom hook là đường link APi và hàm xử lý sau khi lấy được kết quả JSON API\r\nconst useData = (url, handle, depence) => {\r\n  // let dulieu\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      // const response = await fetch(\r\n      //   \"https://api.themoviedb.org/3/movie/550?api_key=3997fc9014661d7c2ce89c2bbea4b9f8\"\r\n      // );\r\n\r\n      // đây là code mẫu\r\n\r\n      const response = await fetch(\r\n        url\r\n        // \"https://api.themoviedb.org/3/discover/tv?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_network=123\"\r\n      );\r\n      // nếu muốn dùng các thể loại khác thì ta giữ nguyên https://api.themoviedb.org/3 và thay thế url mới vào\r\n\r\n      // const response = await fetch(\r\n      //   \"https://api.themoviedb.org/3/movie/top_rated?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US\"\r\n      // );\r\n      //test thử cái khác\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      // console.log(response);\r\n      // console.log(response.ok);\r\n      const data = await response.json();\r\n      console.log(data);\r\n      // dulieu = data\r\n\r\n      // chạy hàm xử lý\r\n      handle(data);\r\n    };\r\n\r\n    getData().catch((error) => {\r\n      console.log(error.message);\r\n    });\r\n  }, [depence]);\r\n  // phải dùng usEffect để chỉ chạy lấy dữ liệu của fetch 1 lần duy nhất, vì nếu ko thì hàm handle sẽ cập nhật cho các state liên tục làm cho trang bị render thì lại render liên tục custom hook này\r\n\r\n  // return {data}\r\n  // trong custom hook, ta không cần dùng return để lấy dữ liệu trả về cũng được, nó chỉ có nhiệm vụ chạy hàm để lấy API và gán vô hàm xử lý handle\r\n\r\n  // ở đây ta dùng useEffect nên nó chỉ render 1 lần, ta tạo 1 biến ở ngoài useEffect tên là dulieu để chứa dữ liệu data JSON kiếm được thì sau khi trang render lại, custom hook cũng render lại làm cho biến dulieu bị reset lại ban đầu, nhưng useEffect không chạy lại nên biến dulieu sẽ có giá trị rỗng nên kết quả return của biến cũng rỗng\r\n};\r\n/////////// nên sử dụng custom hook để lấy API cho tất cả\r\nexport default useData;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./banner.module.css\";\r\nimport useData from \"../data/data\";\r\n\r\nconst Banner = () => {\r\n  const [link, setLink] = useState({});\r\n  useData(\r\n    \"https://api.themoviedb.org/3/discover/tv?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_network=123\",\r\n    bannerHandle\r\n  );\r\n  // ta phải truyền hàm xử lý vào custom hook vì hàm xử lý phải chạy trong luồng bất đồng bộ, do nó phải đợi lấy được kết quả bất đồng bộ thì mới chạy được\r\n  // console.log(data);\r\n\r\n  function bannerHandle(e) {\r\n    let random = Math.floor(Math.random() * e.results.length - 1); // chạy random chọn 1 bộ phim\r\n    let pic = e.results[random].backdrop_path;\r\n    let title = e.results[random].name;\r\n    let overview = e.results[random].overview;\r\n    console.log(pic);\r\n    setLink({\r\n      pic: `https://image.tmdb.org/t/p/original/${pic}`,\r\n      title,\r\n      overview,\r\n    });\r\n    // \"https://image.tmdb.org/t/p/w500/Aa9TLpNpBMyRkD8sPJ7ACKLjt0l.jpg\"\r\n\r\n    /*  ta dùng đường dẫn https://image.tmdb.org/t/p/ và kết hợp thêm các kích thước tiêu chuẩn sau :\r\n  these are the the sizes that I know: \"w92\", \"w154\", \"w185\", \"w342\", \"w500\", \"w780\", or \"original\"; and I think there isn't any other sizes \"original\" will give you a very large poster, if you're on mobile \"w185\" is the best choice\r\n  - Nếu muốn hình rõ thì dùng original\r\n  - Để chỉnh kích thước của hình ta chỉnh width, height trong thẻ img\r\n  */\r\n    // console.log(link);\r\n  }\r\n  return (\r\n    <div className={classes.back}>\r\n      <img\r\n        src={link.pic}\r\n        alt=\"khong thay\"\r\n        width=\"100%\"\r\n        height=\"800px\"\r\n        className={classes.image}\r\n      />\r\n      <h1 className={classes.title}>{link.title}</h1>\r\n      <div className={classes.content}>\r\n        <button\r\n          className={classes.button}\r\n          onClick={() => {\r\n            console.log(\"hi all\");\r\n          }}\r\n        >\r\n          Play\r\n        </button>\r\n        <button className={classes.button}>My List</button>\r\n        <div className={classes.custom_Text}>\r\n          <p className={classes.text}>{link.overview}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// phải chỉnh css position : absolute cho tag <img> để có thể nhấn các button được\r\nexport default Banner;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classes from \"./movieList.module.css\";\r\nimport useData from \"../data/data\";\r\n\r\nconst MovieList = (props) => {\r\n  const [arr, setArr] = useState([]);\r\n  // const getId = useRef();\r\n\r\n  let isOriginal = props.type === \"Original\";\r\n\r\n  useData(props.getLink, arrayHandle);\r\n\r\n  function arrayHandle(e) {\r\n    setArr(e.results);\r\n  }\r\n  // e trong arrayHandle chính là data của useData, lấy dữ liệu API kiếm được và gán cho state, sau đó state sẽ render lại trang để cập nhật, còn ban đầu state là mảng rỗng nên trang sẽ ko có gì\r\n\r\n  function clickHandle(e) {\r\n    // console.log(getId);\r\n    // console.log(getId.current.id);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.id);\r\n    // console.log(arr.filter((item) => item.id == e.target.id));\r\n    // dùng so sánh == vì id trong dữ liệu JSON là string\r\n    const [tam] = arr.filter((item) => +item.id === +e.target.id);\r\n    props.click(tam);\r\n  }\r\n\r\n  function khung(e) {\r\n    // console.log(e.target.parentElement.parentElement);\r\n    // console.log(e.target.parentElement.parentElement.id);\r\n    const loai = e.target.parentElement.parentElement.id;\r\n    props.clickParent(loai);\r\n  }\r\n  //lấy ra id của khung chứa ảnh\r\n\r\n  const list = arr.map((item) => {\r\n    // console.log(arr);\r\n    return (\r\n      <img\r\n        key={item.id}\r\n        id={item.id}\r\n        src={`https://image.tmdb.org/t/p/original/${\r\n          isOriginal ? item.poster_path : item.backdrop_path\r\n        }`}\r\n        alt=\"none\"\r\n        width=\"250px\"\r\n        height=\"auto\"\r\n        className={classes.pic}\r\n        onClick={clickHandle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div id={props.type} onClick={khung}>\r\n      <h2 className={classes.tieude}>{props.type}</h2>\r\n      <div className={classes.cover}>{list}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Trailer = (props) => {\r\n  // console.log(\"đã render lại\");\r\n  const [status, setStatus] = useState(false);\r\n  const [getVideo, setGetVideo] = useState(props.inf.backdrop_path);\r\n  // nếu ban đầu chưa lấy được API thì đặt backdrop thế chỗ youtube\r\n  // console.log(\"state ban đầu: \", getVideo);\r\n  // console.log(\"props nhận được: \", props.inf.backdrop_path);\r\n  // không hiểu sao nó lại render 2 lần lúc đầu ??\r\n  useEffect(() => {\r\n    // console.log(\"chạy fecth..............................\");\r\n    const getTrailer = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.inf.id}/videos?api_key=3997fc9014661d7c2ce89c2bbea4b9f8`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong !\");\r\n      }\r\n      const getData = await response.json();\r\n      // console.log(getData);\r\n\r\n      // lọc lấy các mảng thỏa yêu cầu\r\n      let arrayFilter = getData.results.filter((e) => {\r\n        return e.site === \"YouTube\" && e.type === \"Trailer\";\r\n      });\r\n\r\n      // nếu ko có được e.type === \"Trailer\" thì ta lọc lại để tìm e.type ===  \"Teaser\"\r\n      if (arrayFilter.length === 0) {\r\n        arrayFilter = getData.results.filter((e) => {\r\n          return e.site === \"YouTube\" && e.type === \"Teaser\";\r\n        });\r\n      }\r\n      // tuyệt đối không dùng arrayFilter === [] mà phải dùng arrayFilter.length === 0 vì javascript so sánh phức tạp ko hiểu chỗ này ?\r\n      // console.log(\"mang sau khi lọc: \", arrayFilter);\r\n\r\n      if (arrayFilter.length === 0) {\r\n        setGetVideo(props.inf.backdrop_path);\r\n        setStatus(false);\r\n        // khi component được gắn vào,nó tạo useState thì ta khởi tạo ban đầu cho nó 1 giá trị props.inf.backdrop_path, nhưng khi component được render lại do state thay đổi hoặc do props truyền vào componet thay đôi thì nó không chạy lại dòng khởi tạo useState(props.inf.backdrop_path). Nên state chỉ được cập nhật thông qua hàm set của nó. Chính vì vậy ta phải có lệnh setGetVideo(props.inf.backdrop_path) ở đây\r\n      } else {\r\n        setGetVideo(arrayFilter[0]);\r\n        setStatus(true);\r\n      }\r\n      // có thể dùng hàm find thay thế cho filter sẽ nhanh hơn\r\n\r\n      // console.log(\"video sau khi update: \", getVideo);\r\n      // console.log(\"status sau khi updat: \", status);\r\n      // console.log(\"endingggggggggggggggggggggggggggggg\");\r\n    };\r\n    getTrailer().catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }, [props]);\r\n  // phải cho useEffect cập nhật lại mỗi khi props truyền vào nó thay đổi (tức là khi người dùng nhấn vào 1 bộ phim khác trong dãy)\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  function onReady(event) {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {status && (\r\n        <YouTube videoId={getVideo.key} opts={opts} onReady={onReady} />\r\n      )}\r\n      {!status && (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${getVideo}`}\r\n          alt=\"none\"\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n","import React from \"react\";\r\nimport classes from \"./movieDetail.module.css\";\r\nimport Trailer from \"../data/trailer\";\r\n\r\nconst MovieDetail = (props) => {\r\n  const detail = props.getInf;\r\n  console.log(detail);\r\n  return (\r\n    <div className={classes.frame}>\r\n      <div>\r\n        <h1>{detail.title}</h1>\r\n        <hr></hr>\r\n        <h3>Release Date : {detail.release_date}</h3>\r\n        <h3>Vote : {detail.vote_average}/10</h3>\r\n        <p>{detail.overview}</p>\r\n      </div>\r\n      <div>\r\n        <Trailer inf={detail} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../navbar/navbar\";\r\nimport classes from \"./browse.module.css\";\r\nimport Banner from \"../../banner/banner.js\";\r\nimport MovieList from \"../../body/movieList\";\r\nimport MovieDetail from \"../../body/movieDetail\";\r\n\r\nconst api = [\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/tv?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_network=123\",\r\n    typeFilm: \"Original\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/trending/all/week?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US\",\r\n    typeFilm: \"Xu Hướng\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/movie/top_rated?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US\",\r\n    typeFilm: \"Xếp hạng cao\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_genres=28\",\r\n    typeFilm: \"Hành động\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_genres=35\",\r\n    typeFilm: \"Hài\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_genres=27\",\r\n    typeFilm: \"Kinh dị\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_genres=10749\",\r\n    typeFilm: \"Lãng mạn\",\r\n  },\r\n  {\r\n    link: \"https://api.themoviedb.org/3/discover/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&with_genres=99\",\r\n    typeFilm: \"Tài liệu\",\r\n  },\r\n];\r\n\r\nconst Browse = () => {\r\n  const [parentID, setParentID] = useState(\"\");\r\n  // const [isDifferent, setIsDifferent] = useState(false);\r\n  const [showData, setShowData] = useState({ id: 0, content: \"\", show: false });\r\n\r\n  const getDetail = (e) => {\r\n    console.log(\"lay : \", e);\r\n    console.log(+showData.id);\r\n    console.log(+e.id);\r\n    if (+showData.id !== +e.id) {\r\n      setShowData({\r\n        id: e.id,\r\n        content: e,\r\n        show: true,\r\n      });\r\n    } else {\r\n      setShowData({ id: 0, content: \"\", show: false });\r\n    }\r\n\r\n    // console.log(\"hien : \", showData);\r\n    // khi setShowData 1 giá trị mới thì nó không cập nhật liền mà lên lịch để cập nhật sau khi chạy xong hàm getDetail, nên ta sẽ thấy console.log của nó không hiện ngay giá trị vừa mới cập nhật ở trên, nhưng nó không ảnh hưởng đến logic của chương trình nên ko sao\r\n  };\r\n  const getParent = (e) => {\r\n    setParentID(e);\r\n    // console.log(e);\r\n  };\r\n\r\n  const list = api.map((item) => {\r\n    return (\r\n      <React.Fragment>\r\n        <MovieList\r\n          getLink={item.link}\r\n          type={item.typeFilm}\r\n          click={getDetail}\r\n          clickParent={getParent}\r\n        />\r\n        {parentID === item.typeFilm && showData.show && (\r\n          <MovieDetail getInf={showData.content} />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.umbrella}>\r\n        <Navbar />\r\n        <Banner />\r\n        {list}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Browse;\r\n","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./Search.module.css\";\r\n\r\nconst SearchForm = (props) => {\r\n  const inputValue = useRef();\r\n\r\n  const btnSearchHandle = () => {\r\n    console.log(inputValue.current.value);\r\n    props.getValue(inputValue.current.value);\r\n  };\r\n\r\n  const btnResetHandle = () => {\r\n    inputValue.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={classes.cover}>\r\n      <div className={classes.inside}>\r\n        <span className={classes.Icon}>\r\n          <svg\r\n            className=\"svg-inline--fa fa-search fa-w-16 \"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name of movie\"\r\n          className={classes.inputText}\r\n          ref={inputValue}\r\n        />\r\n        <hr className={classes.line}></hr>\r\n        <button className={classes.btnSearch} onClick={btnSearchHandle}>\r\n          Search\r\n        </button>\r\n        <button className={classes.btnReset} onClick={btnResetHandle}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useData from \"../../data/data\";\r\nimport classes from \"./Search.module.css\";\r\n\r\nconst ResultList = (props) => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  // console.log(props.passValue);\r\n  useData(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=3997fc9014661d7c2ce89c2bbea4b9f8&language=en-US&query=${props.passValue}&include_adult=false`,\r\n    searchHandle,\r\n    props.passValue\r\n  );\r\n  // trong useData có dùng useEffect, vì ở trang chủ ta chỉ cần hiện thị API cho sẵn nên ko cần cập nhật, do đó không truyền vào dependence cho useEffect, nhưng ở trang search này do người dùng thay đổi thông tin nhập vào nên ta cần phải chạy lại useEffect nên mới truyền thêm tham số thứ 3 dependence vào\r\n\r\n  function searchHandle(e) {\r\n    setMovie(e.results);\r\n    // console.log(movie);\r\n  }\r\n\r\n  function clickHandle(e) {\r\n    // console.log(e.target.id);\r\n\r\n    const tam = movie.filter((item) => {\r\n      // console.log(item.id);\r\n      // console.log(+e.target.id);\r\n      return item.id === +e.target.id;\r\n    });\r\n\r\n    // ở đây ta chỉ cần lấy thông tin khi click vào 1 hình chứ ko cần render hay cập nhật UI sau khi click, nên ta chỉ dùng 1 biến let thông thường là được, ko nên dùng state thay cho biến vì state ko cập nhật liền nên nó gây ra độ trễ chương trình\r\n\r\n    props.getDetail(tam[0]);\r\n  }\r\n\r\n  const list = movie.map((item) => {\r\n    // console.log(arr);\r\n    return (\r\n      <img\r\n        key={item.id}\r\n        id={item.id}\r\n        src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}\r\n        alt=\"none\"\r\n        width=\"200px\"\r\n        height=\"auto\"\r\n        className={classes.poster}\r\n        onClick={clickHandle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className={classes.frame}>{list}</div>;\r\n};\r\n\r\nexport default ResultList;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Search.module.css\";\r\nimport Navbar from \"../../navbar/navbar\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ResultList from \"./resultList\";\r\nimport MovieDetail from \"../../body/movieDetail\";\r\n\r\nconst Search = () => {\r\n  // console.log(\"đã render search\");\r\n\r\n  const [request, setRequest] = useState(\"\");\r\n  const [response, setResponse] = useState({ id: 0, content: \"\", show: false });\r\n\r\n  const getHandle = (e) => {\r\n    // console.log(e);\r\n    setRequest(e);\r\n  };\r\n\r\n  const responseHandle = (e) => {\r\n    console.log(e);\r\n\r\n    // phải so sánh bằng number chứ ko so sánh bằng object được, vì 2 object giống nhau hoài toàn nhưng khi so sánh == hay === đều ra false\r\n    if (e.id !== response.id) {\r\n      setResponse({\r\n        id: e.id,\r\n        content: e,\r\n        show: true,\r\n      });\r\n    } else {\r\n      setResponse({ id: 0, content: \"\", show: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.umbrella}>\r\n        <Navbar />\r\n        <SearchForm getValue={getHandle} />\r\n        <h2 className={classes.title}>Search Result</h2>\r\n        {response.show && <MovieDetail getInf={response.content} />}\r\n        <ResultList passValue={request} getDetail={responseHandle} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// nên sử dụng useContext để trao đổi dữ liệu 2 component con\r\nexport default Search;\r\n","import React from 'react';\r\nimport {\r\n\tBrowserRouter,\r\n\tRoutes,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Browse from './pages/browse/Browse';\r\nimport Search from './pages/search/Search';\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t  <Routes>\r\n\t\t\t<Route path=\"/\" element={<Browse/>}/>\r\n\t\t\t<Route path=\"/search\" element={<Search/>}/>\r\n\t\t  </Routes>\r\n\t\t</BrowserRouter>\r\n\t  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"umbrella\":\"Search_umbrella__3Zj6m\",\"cover\":\"Search_cover__3TS7h\",\"inside\":\"Search_inside__2o1Q4\",\"Icon\":\"Search_Icon__whxoN\",\"inputText\":\"Search_inputText__1md7_\",\"line\":\"Search_line__3X7KO\",\"btnSearch\":\"Search_btnSearch__2BwpO\",\"btnReset\":\"Search_btnReset__4fZa0\",\"title\":\"Search_title__2SU6D\",\"frame\":\"Search_frame__2i6qj\",\"poster\":\"Search_poster__3QoGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"banner_back__1B9GE\",\"content\":\"banner_content__f8bna\",\"title\":\"banner_title__2LyHL\",\"button\":\"banner_button__1XVTK\",\"text\":\"banner_text__1JB1-\",\"image\":\"banner_image__2RW_U\",\"custom_Text\":\"banner_custom_Text__xeN1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarFrame\":\"navbar_navbarFrame__ZqgcT\",\"transfer\":\"navbar_transfer__NBk0R\",\"chu\":\"navbar_chu__35bBw\",\"searchIcon\":\"navbar_searchIcon__2Xpgl\"};"],"sourceRoot":""}